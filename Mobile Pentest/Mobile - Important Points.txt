Mobile application penetration testing methodology focuses on client-side security, file system, hardware, and network security.

4 stages of testing 
	Discovery requires the pentester to collect information that is essential in understanding events that lead to the successful exploitation of mobile applications.

	Assessment or analysis involves the penetration tester going through the mobile application source code and identifying potential entry points and weaknesses that can be exploited.

	Exploitation involves the penetration tester leveraging the discovered vulnerabilities to take advantage of the mobile application in a manner not intended by the programmer initially did not intend.

	Reporting is the final stage of the methodology and it involves recording and presenting

Discovery stage
	Open Source Intelligence (OSINT) - publicly available information
	Understanding the Platform - busines use case, kinda threat modeling
	Client-Side vs Server-Side Scenarios -understand the type of app, communciations with DB /servers, session, jailbroken phones compatibility.....

Assessment/Analysis
	Local File Analysis — checks the local files written on file system by application to ensure no violations.
	Archive Analysis— extracts the application installation packages for the Android and iOS platforms. Reviewed to ensure no modifications done to the configurations of the compiled binary.
	Reverse Engineering— involves converting the compiled applications into human-readable source code (Reverse Engineering—This involves converting the compiled applications into human-readable source code)
		Tools used : Android—dex2jar, JD-GUI | iOS—otool, class-dump-z
	Static Analysis - done on the provided files or decompiled source code.
	Dynamic Analysis - include forensic analysis of the file system, assessment of the network traffic between the application and server and an assessment of the application’s inter-process communication (IPC)
		Tools Used : Android: Androwarn, Andrubis, and ApkAnalyser | iOS: Flawfinder and Clang Static Analyzer
	Inter-Process Communication Endpoint Analysis - assess IPC endpoits
		Content Providers—These ensure that access to databases is achieved.
		Intents—These are signals used to send messages between components of the android system.
		Broadcast Receivers—These receive and act on intents received from other applications on the android system.
		Activities—These make up the screens or pages within the application.
		Services—These run from the background and perform tasks regardless of whether the main application is running.

Exploitation and Reporting






	